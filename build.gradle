plugins {
    id 'org.springframework.boot' version '3.2.5' // 안정화된 3.x LTS 버전
    id 'io.spring.dependency-management' version '1.1.4' // 해당 버전과 호환성 좋음
    id 'java'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot WebFlux 스타터
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // 데이터베이스 연동 (R2DBC MariaDB)
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    runtimeOnly 'org.mariadb:r2dbc-mariadb:1.1.3' // 최신 안정 버전 사용
    implementation("io.r2dbc:r2dbc-pool:1.0.2.RELEASE")// 커넥션 풀 사용

    // Lombok (선택 사항: 코드 간소화)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 유효성 검사
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // **Spring Security 스타터 추가 시작**
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // **Spring Security 스타터 추가 끝**


    // **JWT (JJWT) 라이브러리 추가 시작**
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    // **JWT (JJWT) 라이브러리 추가 끝**

    // AOP 추가
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    mainClass.set("org.example.SpringApp")
}